@using MVC_BugTracker.Services.Interfaces

@model MVC_BugTracker.Models.ViewModels.TicketTaskViewModel

@inject IBTProjectService _projectService
@inject IBTFileService _fileService


@{
    ViewData["Title"] = "Details";
    BTUser projectManager = await _projectService.GetProjectManagerAsync(Model.tic.ProjectId);

    // Ticket Status Color

    var statusColor = "primary";

    if (@Model.tic.TicketStatus.Name == "Unassigned")
    {
        statusColor = "danger";
    }
    else if (@Model.tic.TicketStatus.Name == "Resolved")
    {
        statusColor = "success";
    }

    // ./ Ticket Status Color


    // Priority formatting colors
    string priorityColor = "primary";

    switch (@Model.tic.TicketPriority.Name)
    {
        case "Urgent":
            priorityColor = "danger";
            break;

        case "High":
            priorityColor = "warning";
            break;

        case "Low":
            priorityColor = "secondary";
            break;

        default:
            priorityColor = "primary";
            break;
    }
    // ./ Formatting Colors

}

<!-- Content Wrapper. Contains page content -->
<div class="container-fluid">
    <!-- Content Header (Page header) -->
    <section class="content">

        <div class="row mb-2">
            <div class="col-12">
                <h1>@Model.tic.Title</h1>
                <div>
                    <a class="btn-sm btn-secondary mr-1"
                       asp-controller="Projects"
                       asp-action="Details"
                       asp-route-id="@Model.tic.ProjectId">
                        <i class="fas fa-undo-alt"></i> Back to Project Detail
                    </a>

                    @*<a asp-action="Edit" asp-route-id="@Model.Id">Edit</a>*@

                    @* <a class="btn-sm btn-primary mr-1" asp-action="Edit" asp-route-id="@Model.tic.Id">
                        <i class="fas fa-pencil-alt"></i> Edit
                    </a> *@

                    <a href="#" class="btn-sm btn-primary mr-1" onclick="openEditModal(@Model.tic.Id)"><i class="fas fa-pencil-alt"></i> Edit</a>

                    @*<a asp-action="AllTickets">Back to List</a>*@
                    @*<a href="@ViewBag.returnUrl">Return to Previous Page</a>*@
                </div>
                <hr/>
                <partial name="_StatusMessage" model="@TempData["StatusMessage"]" />

            </div>

        </div>

    </section>

    <!-- Main content -->
    <section class="content">

        <!-- Default box -->
        <div class="card card-primary">
            <div class="card-header">
                <h3 class="card-title">Ticket Details</h3>

                @*<div class="card-tools">
                        <button type="button" class="btn btn-tool" data-card-widget="collapse" title="Collapse">
                            <i class="fas fa-minus"></i>
                        </button>
                        <button type="button" class="btn btn-tool" data-card-widget="remove" title="Remove">
                            <i class="fas fa-times"></i>
                        </button>
                    </div>*@
            </div>
            <div class="card-body">
                <div class="row">
                    <div class="col-12 col-md-12 col-lg-8 order-2 order-md-1">

                        <!-- Ticket Summaries -->
                        <div class="row">
                            <div class="col-12 col-sm-4">
                                <div class="info-box bg-primary">
                                    <div class="info-box-content">
                                        <span class="info-box-text text-center text-light">Ticket Type</span>
                                        <span class="info-box-number text-center text-light mb-0">@Model.tic.TicketType.Name</span>
                                    </div>
                                </div>
                            </div>
                            <div class="col-12 col-sm-4">
                                <div class="info-box bg-@statusColor">
                                    <div class="info-box-content">
                                        <span class="info-box-text text-center text-light">Ticket Status</span>
                                        <span class="info-box-number text-center text-light mb-0">@Model.tic.TicketStatus.Name</span>
                                    </div>
                                </div>
                            </div>
                            <div class="col-12 col-sm-4">
                                <div class="info-box bg-@priorityColor">
                                    <div class="info-box-content">
                                        <span class="info-box-text text-center text-light">Ticket Priority</span>
                                        <span class="info-box-number text-center text-light mb-0">@Model.tic.TicketPriority.Name</span>
                                    </div>
                                </div>
                            </div>
                        </div>


                        <!-- Start of Direct Chat -->
                        <div class="row">
                            <div class="col-12">
                                <!-- DIRECT CHAT -->
                                <div class="card direct-chat direct-chat-primary card-primary">

                                    <!-- Card Header -->
                                    <div class="card-header">
                                        <h3 class="card-title">Ticket Comments</h3>

                                        <div class="card-tools">
                                            @*<span title="3 New Messages" class="badge badge-primary">3</span>*@
                                            <button type="button" class="btn btn-tool" data-card-widget="collapse">
                                                <i class="fas fa-minus"></i>
                                            </button>
                                            @*<button type="button" class="btn btn-tool" title="Contacts" data-widget="chat-pane-toggle">
                                                    <i class="fas fa-comments"></i>
                                                </button>*@
                                            @*<button type="button" class="btn btn-tool" data-card-widget="remove">
                                                    <i class="fas fa-times"></i>
                                                </button>*@
                                        </div>
                                    </div>
                                    <!-- /.card-header -->
                                    <!-- Card Body -->
                                    <div class="card-body">
                                        <!-- Conversations are loaded here -->
                                        <div class="direct-chat-messages">

                                            @foreach (var comment in Model.tic.Comments.OrderByDescending(c => c.Created))
                                            {
                                                var commentUserImage = _fileService.DecodeImage(comment.User.AvatarFileData, comment.User.AvatarContentType);


                                                if (@ViewData["CurrentUserId"].Equals(@comment.UserId))
                                                {
                                                    <!-- CURRENT USER -->
                                                    <!-- Message. Default to the left -->
                                                    <div class="direct-chat-msg right">
                                                        <div class="direct-chat-infos clearfix">
                                                            <span class="direct-chat-name float-left">@comment.User.FullName</span>
                                                            <span class="direct-chat-timestamp float-right">@comment.Created.ToString("MMM dd, yyyy h:mm tt")</span>
                                                        </div>
                                                        <!-- /.direct-chat-infos -->
                                                        <img class="direct-chat-img"
                                                             src="@(commentUserImage == null ? Href("~/img/defaultUserImage.png") : commentUserImage)"
                                                             alt="message user image">

                                                        <!-- /.direct-chat-img -->
                                                        <div class="direct-chat-text">
                                                            @comment.Comment
                                                        </div>
                                                        <!-- /.direct-chat-text -->
                                                    </div>
                                                    <!-- /.direct-chat-msg -->

                                                }
                                                else
                                                {
                                                    <!-- OTHER USER -->
                                                    <!-- Message to the right -->
                                                    <div class="direct-chat-msg">
                                                        <div class="direct-chat-infos clearfix">
                                                            <span class="direct-chat-name float-right">@comment.User.FullName</span>
                                                            <span class="direct-chat-timestamp float-left">@comment.Created.ToString("MMM dd, yyyy h:mm tt")</span>
                                                        </div>
                                                        <!-- /.direct-chat-infos -->
                                                        <img class="direct-chat-img"
                                                             src="@(commentUserImage == null ? Href("~/img/defaultUserImage.png") : commentUserImage)"
                                                             alt="message user image">

                                                        <!-- /.direct-chat-img -->
                                                        <div class="direct-chat-text">
                                                            @comment.Comment
                                                        </div>
                                                        <!-- /.direct-chat-text -->
                                                    </div>
                                                    <!-- /.direct-chat-msg -->
                                                }
                                            }


                                        </div>
                                        <!--/.direct-chat-messages-->
                                        <!-- /.direct-chat-pane -->
                                    </div>
                                    <!-- /.card-body -->
                                    <div class="card-footer">

                                        <!-- CREATE new comment -->
                                        <form asp-action="Create" asp-controller="TicketComments" method="post">
                                            <input type="hidden" name="TicketId" value="@Model.tic.Id" />
                                            <input type="hidden" name="ProjectId" value="@Model.tic.ProjectId" />
                                            <input type="hidden" name="DeveloperUserId" value="@Model.tic.DeveloperUserId" />
                                            <input type="hidden" name="OwnerUserId" value="@Model.tic.OwnerUserId" />
                                            <div class="input-group">
                                                <input required type="text" name="Comment" placeholder="Type Message ..." class="form-control">

                                                <span class="input-group-append">
                                                    <button type="submit" value="Create" class="btn btn-primary">Send</button>
                                                </span>
                                            </div>
                                        </form>
                                    </div>
                                    <!-- /.card-footer-->
                                </div>
                                <!--/.direct-chat -->
                            </div>
                        </div>
                        <!-- End of Direct Chat -->
                        <!-- Start of Ticket History -->
                        <div class="row">
                            <div class="col-12">
                                <!-- DIRECT CHAT -->
                                <div class="card direct-chat direct-chat-primary collapsed-card card-primary">

                                    <!-- Card Header -->
                                    <div class="card-header">
                                        <h3 class="card-title">Ticket History</h3>

                                        <div class="card-tools">
                                            @*<span title="3 New Messages" class="badge badge-primary">3</span>*@
                                            <button type="button" class="btn btn-tool" data-card-widget="collapse">
                                                <i class="fas fa-plus"></i>
                                            </button>

                                        </div>
                                    </div>
                                    <!-- /.card-header -->
                                    <!-- Card Body -->
                                    <div class="card-body">
                                        <!-- Conversations are loaded here -->
                                        <div class="direct-chat-messages">

                                            @foreach (var history in Model.tic.History.OrderByDescending(c => c.Created))
                                            {
                                                var historyUserImage = _fileService.DecodeImage(history.User?.AvatarFileData, history.User?.AvatarContentType);

                                                <!-- Message. Default to the left -->
                                                <div class="direct-chat-msg left">
                                                    <div class="direct-chat-infos clearfix">
                                                        <span class="direct-chat-name float-left">@history.User?.FullName</span>
                                                        <span class="direct-chat-timestamp float-right">@history.Created.ToString("MMM dd, yyyy h:mm tt")</span>
                                                    </div>
                                                    <!-- /.direct-chat-infos -->

                                                    <img class="direct-chat-img"
                                                         src="@(historyUserImage == null ? Href("~/img/defaultUserImage.png") : historyUserImage)"
                                                         alt="message user image">

                                                    <!-- /.direct-chat-img -->
                                                    <div class="direct-chat-text">
                                                        @history.Description
                                                    </div>
                                                    <!-- /.direct-chat-text -->
                                                </div>
                                                <!-- /.direct-chat-msg -->

                                            }


                                        </div>
                                        <!--/.direct-chat-messages-->
                                        <!-- /.direct-chat-pane -->
                                    </div>
                                    <!-- /.card-body -->

                                </div>
                                <!--/.direct-chat -->
                            </div>
                        </div>
                        <!-- End of Direct Chat -->
                        @if (Model.TaskViewModels != null && Model.TaskViewModels.Count>0)
                        {
                        <!-- Start of Ticket Task -->
                        <div class="row">
                            <div class="col-12">
                                <!-- DIRECT CHAT -->
                                <div class="card direct-chat direct-chat-primary collapsed-card card-primary">

                                    <!-- Card Header -->
                                    <div class="card-header">
                                        <h3 class="card-title">Ticket Task</h3>

                                        <div class="card-tools">
                                            @*<span title="3 New Messages" class="badge badge-primary">3</span>*@
                                            <button type="button" class="btn btn-tool" data-card-widget="collapse">
                                                <i class="fas fa-plus"></i>
                                            </button>

                                        </div>
                                    </div>
                                    <!-- /.card-header -->
                                    <!-- Card Body -->
                                    <div class="card-body">
                                        <!-- Conversations are loaded here -->
                                        <div class="direct-chat-messages">
                                            <table id="dtAllTickets" class="table table-bordered table-hover dataTables_wrapper dtr-inline" role="grid" aria-describedby="example2-info" style="width:100%!important">
                                                <thead>
                                                    <tr>
                                                        <th>
                                                            Task Title 
                                                        </th>
                                                       
                                                        <th>
                                                            Task Description
                                                        </th>
                                                        
                                                    </tr>
                                                </thead>
                                                <tbody>
                                                    @foreach (var item in Model.TaskViewModels)
                                                    {
                                                        <tr>
                                                            <td>
                                                              @Html.DisplayFor(modelItem => item.TaskTitle)
                                                                @*<div>Created: @Html.DisplayFor(modelItem => item.Created)</div>*@

                                                            </td>

                                                            <td style="overflow: auto;resize: vertical">
                                                                @Html.DisplayTextFor(modelItem => item.TaskDescription)

                                                               
                                                            </td>

                                                           
                                                        </tr>
                                                    }
                                                </tbody>
                                            </table>
                                          

                                        </div>
                                        <!--/.direct-chat-messages-->
                                        <!-- /.direct-chat-pane -->
                                    </div>
                                    <!-- /.card-body -->

                                </div>
                                <!--/.direct-chat -->
                            </div>
                        </div>
                        <!-- End of Direct Chat -->
                        }



                    </div>
                    <div class="col-12 col-md-12 col-lg-4 order-1 order-md-2">
                        <h3 class="text-primary">@Model.tic.Title</h3>
                        <p class="text-muted">@Model.tic.Description</p>
                        <br>
                        <div class="text-muted">
                            <p class="text-sm">
                                Project
                                <b class="d-block">@Model.tic.Project.Name</b>
                            </p>

                            <!-- Project Manager -->
                            <p class="text-sm">
                                Project Manager
                                @*@string.IsNullOrEmpty(projectManager.FirstName)*@

                                @if (projectManager.FirstName == null)
                                {
                                    <b class="d-block">Unassigned</b>
                                }
                                else
                                {
                                    <b class="d-block">@projectManager?.FullName</b>
                                }
                            </p>

                            <!-- Submitter -->
                            <p class="text-sm">
                                Submitter
                                <b class="d-block">@(Model.tic.OwnerUser?.FullName ?? "Unassigned")</b>
                            </p>

                            <!-- Developer -->
                            <p class="text-sm">
                                Developer
                                <b class="d-block">@(Model.tic.DeveloperUser?.FullName ?? "Unassigned")</b>
                            </p>

                            <p class="text-sm">
                                Due Date
                                <b class="d-block">@(Model.tic.DueDate?.ToString("dd MMM yyyy") ?? "Unassigned")</b>
                            </p>
                        </div>

                        <h5 class="mt-5 text-muted">Project files</h5>

                        <!-- UPLOAD Ticket Attachments -->

                        <form asp-action="Create" asp-controller="TicketAttachments" enctype="multipart/form-data" method="post">
                            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                            <input type="hidden" asp-for="@Model.tic.Id" name="TicketId">
                            <input type="hidden" name="ProjectId" value="@Model.tic.ProjectId" />
                            <input type="hidden" name="DeveloperUserId" value="@Model.tic.DeveloperUserId" />
                            <input type="hidden" name="OwnerUserId" value="@Model.tic.OwnerUserId" />

                            <div class="media-body">
                                @*<label class="form-label d-block mb-2">Add Attachment</label>*@
                                @* <input asp-for="@Model.Attachments.FirstOrDefault().Description" *@
                                <label>
                                    Description
                                </label>
                                <input name="Description"
                                       type="text"
                                       class="form-control"
                                       placeholder="File Description (Required)"
                                       required />


                                <br />

                                <!-- New File Uploader -->
                                <div class="form-group">
                                    <!-- <label for="customFile">Custom File</label> -->
                                    <div class="custom-file">
                                        <input asp-for="@Model.tic.Attachments.FirstOrDefault().FileData"
                                               type="file" class="custom-file-input"
                                               id="customFile">
                                        <label class="custom-file-label" for="customFile">Choose file</label>
                                    </div>
                                </div>

                                <!-- /New File Uploader -->

                                <button type="submit"
                                        class="btn btn-outline-secondary btn-sm md-btn-flat">
                                    Submit
                                </button>
                            </div>
                        </form>


                        <hr />



                        @*
                            <li>
                            <a href="" class="btn-link text-secondary"><i class="far fa-fw fa-file-word"></i> Functional-requirements.docx</a>
                            </li>
                            <li>
                                <a href="" class="btn-link text-secondary"><i class="far fa-fw fa-file-pdf"></i> UAT.pdf</a>
                            </li>
                            <li>
                                <a href="" class="btn-link text-secondary"><i class="far fa-fw fa-envelope"></i> Email-from-flatbal.mln</a>
                            </li>
                            <li>
                                <a href="" class="btn-link text-secondary"><i class="far fa-fw fa-image "></i> Logo.png</a>
                            </li>
                            <li>
                                <a href="" class="btn-link text-secondary"><i class="far fa-fw fa-file-word"></i> Contract-10_12_2014.docx</a>
                            </li>
                        *@


                        <!-- Ticket Attachments Card -->
                        <!-- Ticket Card  collapsed-card -->
                        <div class="card card-primary">
                            <div class="card-header">
                                <h3 class="card-title">Project Files</h3>

                                <div class="card-tools">
                                    <button type="button" class="btn btn-tool" data-card-widget="collapse">
                                        <i class="fas fa-minus"></i>
                                    </button>
                                </div>
                                <!-- /.card-tools -->
                            </div>
                            <!-- /.card-header -->
                            <div class="card-body">
                                <!-- ATTACHMENTS -->

                                <ul class="nav flex-column">

                                    @foreach (var attachment in Model.tic.Attachments.OrderByDescending(a => a.Created))
                                    {
                                        <li class="pt-1 pb-1">

                                            <!-- DELETE Attachment Form -->
                                            <form asp-action="Delete" asp-controller="TicketAttachments" method="post">
                                                <a target="_blank" href="@_fileService.DecodeImage(attachment.FileData, attachment.FileContentType)" class="btn-link text-secondary">
                                                    <i class="far fa-fw fa-file"></i> @attachment.Description
                                                </a>

                                                <span class="float-right">

                                                    <span asp-validation-summary="ModelOnly" class="text-danger"></span>
                                                    <input type="hidden" asp-for="@attachment.Id" name="id">
                                                    <input type="hidden" asp-for="@Model.tic.Id" name="TicketId">
                                                    <input type="hidden" name="ProjectId" value="@Model.tic.ProjectId" />
                                                    <input type="hidden" name="DeveloperUserId" value="@Model.tic.DeveloperUserId" />
                                                    <input type="hidden" name="OwnerUserId" value="@Model.tic.OwnerUserId" />

                                                    <span id="confirmDeleteSpan_@attachment.Id" style="display:none">
                                                        <span>Delete?</span>
                                                        <button type="submit"
                                                                class="badge badge-danger border-0">
                                                            Yes
                                                        </button>
                                                        <a href="#"
                                                           class="badge badge-primary"
                                                           onclick="confirmDelete(@attachment.Id, false)">
                                                            No
                                                        </a>
                                                    </span>

                                                    <span id="deleteSpan_@attachment.Id">
                                                        <a href="#"
                                                           class="badge badge-danger"
                                                           onclick="confirmDelete(@attachment.Id, true)">
                                                            <i class="fas fa-times"></i>
                                                        </a>
                                                    </span>
                                                </span>
                                            </form>
                                            <!-- // DELETE Atachment Form -->

                                        </li>


                                    }



                                </ul>

                            </div>
                            <!-- /.card-body -->
                        </div>
                        <!-- /.card -->
                        <!-- // Ticket Attachments Card -->


                    </div>
                </div>
            </div>
            <!-- /.card-body -->
        </div>
        <!-- /.card -->

    </section>
    <!-- /.content -->
    <div class="modal fade" id="editModal" tabindex="-1" role="dialog" aria-labelledby="editModalLabel" aria-hidden="true">
        <div class="modal-dialog" role="document">
            <div class="modal-content" style="width:150%!important;right:100px">
                <div class="modal-header" style="background-color:#007bff; color:white;">
                    <h5 class="modal-title" id="editModalLabel">Edit Ticket</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <div id="editFormContainer">
                        <!-- Partial view content will be loaded here -->
                    </div>
                </div>
            </div>
        </div>
    </div>

</div><!-- /.container-fluid -->
<!-- /.content-wrapper -->


@section Scripts {

    <script>
        // Custom Input for File Upload
        $(function () {
            bsCustomFileInput.init();
        });
    </script>

  

        <script>
            function openEditModal(id) {
                $.get('/Tickets/Edit/' + id, function (data) {
                    $('#editFormContainer').html(data);
                    $('#editModal').modal('show');
                });
            }
        </script>

    <script>
       
        // Function to reset input fields
        function resetInputFieldsEdit($trNew) {
            $trNew.find(':input[type="text"]').val('');
            $trNew.find('textarea').val('');
        }

        // Function to update task count
        function updateTaskCountEdit() {
            var taskCountEdit = $('#dataTableEdit tr').length - 1; // Subtract 1 to exclude the header row
            $('#taskCountEdit').val(taskCountEdit);
            updateTaskIndicesEdit();
        }

        // 1. Add new row
        function addNewEdit() {
            // e.preventDefault();
            var $tableBody = $("#dataTableEdit");
            var $trNew = $('<tr style="border: 1px solid black"></tr>'); // Create a new row

            // Add TaskTitle input field with validation
            var $taskTitleInput = $('<td><input type="text" name="TaskViewModels[' + ($('#taskCountEdit').val()) + '].TaskTitle" class="form-control" placeholder="Task Title" required data-val="true" data-val-required="Task Title is required" /></td>');
            $trNew.append($taskTitleInput);

            // Add TaskDescription textarea field with validation
            var $taskDescriptionInput = $('<td><textarea name="TaskViewModels[' + ($('#taskCountEdit').val()) + '].TaskDescription" class="form-control" placeholder="Task Description" required data-val="true" data-val-required="Task Description is required"></textarea></td>');
            $trNew.append($taskDescriptionInput);

            // Add Remove link
            var $removeLink = $('<td><a href="#"  onclick="removal(event)">Remove</a></td>');
            $removeLink.click(function (e) {
                e.preventDefault();
                $trNew.remove(); // Remove the row
                updateTaskCountEdit(); // Update the task count when removing a task
            });
            $trNew.append($removeLink);

            $tableBody.append($trNew);

            // Reset input fields
            resetInputFieldsEdit($trNew);

            // Update the task count when adding a new task
            updateTaskCountEdit();
            updateTaskIndicesEdit();
        };

        // 2. Remove (Event delegation)
        function removal(e) {

           

            e.preventDefault();
            $(e.target).closest('tr').remove(); // Find the closest <tr> and remove it
            updateTaskCountEdit(); // Update the task count when removing a task
            updateTaskIndicesEdit();
           
        };

       
        function updateTaskIndicesEdit() {
            var $tableBody = $("#dataTableEdit");
            var $taskRows = $tableBody.find('tr');

            $taskRows.each(function (index, row) {
                var $row = $(row);
                var $taskTitleInput = $row.find('input[name^="TaskViewModels"]');
                // var $taskTitleInput = $row.find('input[name^="TaskViewModels"]').filter('[type="text"]');
                var $taskDescriptionInput = $row.find('textarea[name^="TaskViewModels"]');

                // Update the name attributes with the correct index
                var newIndex = index - 1; // Adjust the index
                $taskTitleInput.attr('name', 'TaskViewModels[' + newIndex + '].TaskTitle');
                $taskDescriptionInput.attr('name', 'TaskViewModels[' + newIndex + '].TaskDescription');
            });

            taskCounterEdit = $taskRows.length - 1; // Update the task counter
        }

                    


    </script>
}