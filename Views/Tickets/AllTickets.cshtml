@using MVC_BugTracker.Services.Interfaces

@model IEnumerable<MVC_BugTracker.Models.Ticket>

@inject IBTProjectService _projectService

@{
    ViewData["Title"] = "All Tickets";
}

<h1>All Tickets</h1>

<style>
    #hover a:hover{
        text-decoration:underline;
        text-decoration-color: #0366d6;
    }
</style>

<p>
    @* <a asp-action="Create">Create New</a> *@
    <button class="btn-sm btn-primary" onclick="openCreateModal()"><i class="fas fa-plus"></i> Create New</button>
</p>

<partial name="_StatusMessage" model="@TempData["StatusMessage"]" />

<div class="card">
    <div class="card-body">
        <div class="dataTables_wrapper dt-bootstrap4">
            <div class="row">
                <div class="col">
                    <!-- All Tickets DATA-TABLE -->
                    <table id="dtAllTickets" class="table table-bordered table-hover dataTables_wrapper dtr-inline" role="grid" aria-describedby="example2-info">
                        <thead>
                            <tr>
                                <th>
                                    Title (Date Created)
                                </th>
                                @*<th>
                                        Ticket Type
                                    </th>*@
                                <th>
                                    Project
                                </th>
                                <th>
                                    Date Created
                                </th>
                                <th>
                                    Title
                                </th>
                                @*<th>
                                        Description
                                    </th>*@

                                @*<th>
                                        Date Updated
                                    </th>*@
                                @*<th>
                                        @Html.DisplayNameFor(model => model.Archived)
                                    </th>
                                    <th>
                                        @Html.DisplayNameFor(model => model.ArchivedDate)
                                    </th>*@

                                <th>
                                    Priority
                                </th>
                                <th>
                                    Status
                                </th>
                                <th>
                                    Submitter
                                </th>
                                <th>
                                    Developer
                                </th>
                                <th>
                                    Actions
                                </th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var item in Model)
                            {
                                <tr>
                                    <td id="hover">
                                        @* <div class="font-weight-bold">@Html.DisplayFor(modelItem => item.Title)</div> *@
                                        @*<div>Created: @Html.DisplayFor(modelItem => item.Created)</div>*@
                                        <a  class="font-weight-bold" 
                                           asp-action="TicketDetails"
                                           asp-route-id="@item.Id">
                                            @item.Title
                                        </a>
                                    </td>
                                    @*<td>
                                            @Html.DisplayFor(modelItem => item.TicketType.Name)
                                        </td>*@
                                    <td>
                                        @Html.DisplayFor(modelItem => item.Project.Name)

                                        @{
                                            BTUser projectManager = await _projectService.GetProjectManagerAsync(item.ProjectId);

                                            var pm = "Unassigned";


                                            if (projectManager.FirstName != null)
                                            {
                                                pm = projectManager.FullName;
                                            }
                                        }

                                        <div>Project Manager: @pm</div>
                                    </td>

                                    <td>
                                        @Html.DisplayFor(modelItem => item.Created)
                                    </td>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.Title)
                                    </td>
                                    @*<td>
                                            @Html.DisplayFor(modelItem => item.Description)
                                        </td>*@

                                    @*<td>
                                            @Html.DisplayFor(modelItem => item.Updated)
                                        </td>*@
                                    @*<td>
                                            @Html.DisplayFor(modelItem => item.Archived)
                                        </td>
                                        <td>
                                            @Html.DisplayFor(modelItem => item.ArchivedDate)
                                        </td>*@

                                    <td>
                                        @Html.DisplayFor(modelItem => item.TicketPriority.Name)
                                    </td>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.TicketStatus.Name)
                                    </td>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.OwnerUser.FullName)
                                    </td>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.DeveloperUser.FullName)
                                    </td>

                                    <td id="hover">
                                        <a asp-action="TicketDetails" asp-route-id="@item.Id">Details</a> |
                                        @* <a asp-action="Edit" asp-route-id="@item.Id">Edit</a> *@
                                        <a href="#" onclick="openEditModal(@item.Id)"> Edit</a>

                                        @if (User.IsInRole("Admin"))
                                        {
                                          @*   <a asp-action="Delete" asp-route-id="@item.Id"> | Delete</a> *@
                                            <a href="#" onclick="openDeleteModal(@item.Id)"> | Delete</a>
                                        }
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                   
                    <!-- END TABLE-->
                    <div class="modal fade" id="createModal" tabindex="-1" role="dialog" aria-labelledby="createModalLabel" aria-hidden="true">
                        <div class="modal-dialog" role="document">
                            <div class="modal-content" style="width:150%!important;right:100px">
                                <div class="modal-header" style="background-color:#007bff; color:white;">
                                    <h5 class="modal-title" id="createModalLabel">New Ticket</h5>
                                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                                        <span aria-hidden="true">&times;</span>
                                    </button>
                                </div>
                                <div class="modal-body" style="padding-bottom:0px!important">
                                    <div id="createFormContainer" style="top:0px">
                                        <!-- Partial view content for creating a new project will be loaded here -->
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>

                    <div class="modal fade" id="editModal" tabindex="-1" role="dialog" aria-labelledby="editModalLabel" aria-hidden="true">
                        <div class="modal-dialog" role="document">
                            <div class="modal-content" style="width:150%!important;right:100px">
                                <div class="modal-header" style="background-color:#007bff; color:white;">
                                    <h5 class="modal-title" id="editModalLabel">Edit Ticket</h5>
                                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                                        <span aria-hidden="true">&times;</span>
                                    </button>
                                </div>
                                <div class="modal-body">
                                    <div id="editFormContainer">
                                        <!-- Partial view content will be loaded here -->
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>

                    <div class="modal fade" id="deleteModal" tabindex="-1" role="dialog" aria-labelledby="deleteModalLabel" aria-hidden="true">
                        <div class="modal-dialog" role="document">
                            <div class="modal-content">
                                <div class="modal-header">
                                    <h5 class="modal-title" id="deleteModalLabel">Confirm Deletion</h5>
                                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                                        <span aria-hidden="true">&times;</span>
                                    </button>
                                </div>
                                <div class="modal-body">
                                    <p>Are you sure you want to delete this Ticket?</p>
                                </div>
                                <div class="modal-footer">
                                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Cancel</button>
                                    <button type="button" class="btn btn-danger" onclick="deleteProject()">Delete</button>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
@section Scripts {
    <script>
        $(document).ready(function () {
            $('#dtAllTickets').DataTable({
                "paging": true,
                "lengthChange": false,
                "searching": true,
                "order": [[1, "desc"]],
                "rowGroup": { dataSrc: 1 },
                "info": true,
                "autoWidth": false,
                "responsive": true,
                "columnDefs": [
                    {
                        "targets": [1, 2, 3],
                        "visible": false,
                        "searchable": true
                    }
                ]
            });
        });

                    //$(document).ready(function () {
                    //    $('#dtAllTickets').DataTable();
                    //});
    </script>
    <script>
        function openCreateModal() {
            
            $.get('/Tickets/Create', function (data) {
                $('#createFormContainer').html(data);
                $('#createModal').modal('show');
            });
        }</script>

        <script>

       


        // $(document).ready(function () {
          
            // Function to reset input fields
            function resetInputFields($trNew) {
                $trNew.find(':input[type="text"]').val('');
                $trNew.find('textarea').val('');
            }

            // Initialize a counter for tasks
            var taskCounter = 0;

            // 1. Add new row
            function addNew() {
                
                // e.preventDefault();
                console.log("Button clicked");
                var $tableBody = $("#dataTable");
                var $trNew = $('<tr style="border: 1px solid black"></tr>'); // Create a new row

                // Add TaskTitle input field with validation
                var taskTitleInputName = "TaskViewModels[" + taskCounter + "].TaskTitle";
                var $taskTitleInput = $('<td><input type="text" name="' + taskTitleInputName + '" class="form-control" placeholder="Task Title" required data-val="true" data-val-required="Task Title is required" /></td>');
                $trNew.append($taskTitleInput);

                // Add TaskDescription textarea field with validation
                var taskDescriptionInputName = "TaskViewModels[" + taskCounter + "].TaskDescription";
                var $taskDescriptionInput = $('<td><textarea name="' + taskDescriptionInputName + '" class="form-control" placeholder="Task Description" required data-val="true" data-val-required="Task Description is required"></textarea></td>');
                $trNew.append($taskDescriptionInput);

                // Add Remove link
                var $removeLink = $('<td><a href="#" class="remove">Remove</a></td>');
                $removeLink.click(function (e) {
                    e.preventDefault();
                    $trNew.remove(); // Remove the row
                    updateTaskIndices(); // Update task indices after removal
                });
                $trNew.append($removeLink);

                $tableBody.append($trNew);

                // Reset input fields
                resetInputFields($trNew);

                taskCounter++; // Increment the task counter
            };
          

            // 2. Remove (Event delegation)
            $('#dataTable').on("click", 'a.remove', function (e) {
                e.preventDefault();
                $(this).closest('tr').remove(); // Find the closest <tr> and remove it
                updateTaskIndices(); // Update task indices after removal
           
            });

            // Function to update task indices after removal
            function updateTaskIndices() {
                var $tableBody = $("#dataTable");
                var $taskRows = $tableBody.find('tr');

                $taskRows.each(function (index, row) {
                    var $row = $(row);
                    var $taskTitleInput = $row.find('input[name^="TaskViewModels"]');
                    var $taskDescriptionInput = $row.find('textarea[name^="TaskViewModels"]');

                    // Update the name attributes with the correct index
                    var newIndex = index - 1; // Adjust the index
                    $taskTitleInput.attr('name', 'TaskViewModels[' + newIndex + '].TaskTitle');
                    $taskDescriptionInput.attr('name', 'TaskViewModels[' + newIndex + '].TaskDescription');
                });

                taskCounter = $taskRows.length - 1; // Update the task counter
            }
        // });
    </script>


    <script>
        function openEditModal(id) {
           
            $.get('/Tickets/Edit/' + id, function (data) {
                $('#editFormContainer').html(data);
                $('#editModal').modal('show');
            });
        }</script>


        <script>
            // $(document).ready(function () {
                // Function to reset input fields
                function resetInputFieldsEdit($trNew) {
                    $trNew.find(':input[type="text"]').val('');
                    $trNew.find('textarea').val('');
                }

                // Function to update task count
                function updateTaskCountEdit() {
            var taskCountEdit = $('#dataTableEdit tr').length - 1; // Subtract 1 to exclude the header row
                    $('#taskCountEdit').val(taskCountEdit);
                    updateTaskIndicesEdit();
                }

                // 1. Add new row
        function addNewEdit() {
                    // e.preventDefault();
            var $tableBody = $("#dataTableEdit");
                    var $trNew = $('<tr style="border: 1px solid black"></tr>'); // Create a new row

                    // Add TaskTitle input field with validation
            var $taskTitleInput = $('<td><input type="text" name="TaskViewModels[' + ($('#taskCountEdit').val()) + '].TaskTitle" class="form-control" placeholder="Task Title" required data-val="true" data-val-required="Task Title is required" /></td>');
                    $trNew.append($taskTitleInput);

                    // Add TaskDescription textarea field with validation
            var $taskDescriptionInput = $('<td><textarea name="TaskViewModels[' + ($('#taskCountEdit').val()) + '].TaskDescription" class="form-control" placeholder="Task Description" required data-val="true" data-val-required="Task Description is required"></textarea></td>');
                    $trNew.append($taskDescriptionInput);

                    // Add Remove link
                    var $removeLink = $('<td><a href="#"  onclick="removal(event)">Remove</a></td>');
                    $removeLink.click(function (e) {
                        e.preventDefault();
                        $trNew.remove(); // Remove the row
                        updateTaskCountEdit(); // Update the task count when removing a task
                    });
                    $trNew.append($removeLink);

                    $tableBody.append($trNew);

                    // Reset input fields
                    resetInputFieldsEdit($trNew);

                    // Update the task count when adding a new task
                    updateTaskCountEdit();
                    updateTaskIndicesEdit();
                };

                // 2. Remove (Event delegation)
        function removal(e) {
           
            
                
                    e.preventDefault();
                $(e.target).closest('tr').remove(); // Find the closest <tr> and remove it
                    updateTaskCountEdit(); // Update the task count when removing a task
                    updateTaskIndicesEdit();
                    // updateRemoveTask();
                };

      
                function updateTaskIndicesEdit() {
            var $tableBody = $("#dataTableEdit");
                    var $taskRows = $tableBody.find('tr');

                    $taskRows.each(function (index, row) {
                        var $row = $(row);
                        var $taskTitleInput = $row.find('input[name^="TaskViewModels"]');
                        // var $taskTitleInput = $row.find('input[name^="TaskViewModels"]').filter('[type="text"]');
                        var $taskDescriptionInput = $row.find('textarea[name^="TaskViewModels"]');

                        // Update the name attributes with the correct index
                        var newIndex = index - 1; // Adjust the index
                        $taskTitleInput.attr('name', 'TaskViewModels[' + newIndex + '].TaskTitle');
                        $taskDescriptionInput.attr('name', 'TaskViewModels[' + newIndex + '].TaskDescription');
                    });

                    taskCounterEdit = $taskRows.length - 1; // Update the task counter
                }

            // });

    
        </script>


    <script>
        var deleteProjectId;

        function openDeleteModal(id) {
            
            deleteProjectId = id;
            $('#deleteModal').modal('show');
        }



        function deleteProject() {
            
            var token = $('input[name="__RequestVerificationToken"]').val();
            $.ajax({
                url: '/Tickets/Deletes/' + deleteProjectId,
                type: 'POST',
                data: {
                    __RequestVerificationToken: token
                },
                success: function (data) {
                    $('#deleteModal').modal('hide');

                    location.reload();
                },
                error: function (xhr, status, error) {
                    console.error(xhr.responseText);
                    // Handle error cases
                }
            });
        }
    </script>
}
